{"version":3,"sources":["components/ToDo/EditTask/_EditTask.module.scss","components/UpdateProfile/_UpdateProfile.module.scss","components/Signup/_Signup.module.scss","components/Login/_Login.module.scss","components/ToDo/CreateTask/_CreateTask.module.scss","components/ResetPassword/_ResetPassword.module.scss","components/Header/_Header.module.scss","components/ToDo/Calendar/Day/_Day.module.scss","components/Profile/_Profile.module.scss","components/ToDo/_ToDo.module.scss","components/_App.module.scss","components/ToDo/Task/_Task.module.scss","components/ToDo/Calendar/_Calendar.module.scss","firebase.ts","events/dbEvents.ts","contexts/AuthContext.tsx","components/Signup/Signup.tsx","components/Login/Login.tsx","components/Header/Header.tsx","components/ToDo/Calendar/Day/Day.tsx","components/ToDo/Calendar/Calendar.tsx","components/ToDo/CreateTask/CreateTask.tsx","assets/icons/trash.svg","components/ToDo/EditTask/EditTask.tsx","components/ToDo/Task/Task.tsx","components/ToDo/ToDo.tsx","components/Profile/Profile.tsx","components/ResetPassword/ResetPassword.tsx","components/UpdateProfile/UpdateProfile.tsx","components/PrivateRoute.tsx","components/App.tsx","index.tsx"],"names":["module","exports","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","a","newDate","format","Date","collection","doc","window","userId","where","FieldPath","documentId","get","then","querySnapshot","docs","forEach","ref","delete","date","userDays","orderBy","result","days","data","push","haveCompleted","haveUncompleted","parse","id","newTask","document","createdAt","set","todo","todoId","add","day","taskId","exists","Error","catch","update","isComplete","changeDayStatuses","statuses","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","clearDB","onAuthStateChanged","user","uid","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","preventDefault","current","className","styles","container","card","cardTitle","cardForm","onSubmit","htmlFor","name","type","required","disabled","bottom","loginLink","to","Login","Header","page","header","link","active","Day","isSelected","currentDate","setSelectedDate","dayStatuses","calendarDay","onClick","center","markers","uncompleted","completed","Calendar","selectedDate","daysStatuses","dots","speed","slidesToShow","slidesToScroll","infinite","responsive","breakpoint","settings","daysLeft","endOfMonth","getDate","i","addDays","currentStatuses","find","elem","createCalendar","CreateTask","closeCreator","addToDoLocal","titleRef","bodyRef","target","role","main","title","aria-label","form","addToDo","body","toISOString","style","height","Task","closeTask","editToDoLocal","removeToDoLocal","task","taskChanged","setTaskChanged","handleTaskEdit","newToDo","editToDo","defaultValue","onChange","width","trashBtn","removeToDo","src","trashIcon","alt","setSelectedTask","checkDayStatuses","handlerChangeToDoStatus","readOnly","changeToDoStatus","taskCheckbox","defaultChecked","stopPropagation","ToDo","toDos","setToDos","creation","setCreation","selectedTask","setDaysStatuses","todoIsComplete","currentToDos","todayStatusesIndex","findIndex","todayStatuses","newToDos","todoIndex","newDayStatuses","newDaysStatuses","getDaysStatuses","getToDosData","ToDos","tasks","tasksTitle","tasksList","map","item","editedToDoIndex","removedTaskIndex","splice","Profile","switchTheme","themeSwitcher","logoutBtn","ResetPassword","message","setMessage","UpdateProfile","confirmPasswordRef","promises","Promise","all","finally","cardFormItem","placeholder","submitBtn","PrivateRoute","Component","component","rest","render","props","App","localStorage","theme","setTheme","newTheme","exact","path","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51a7fa47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_EditTask_container__1VvY8\",\"main\":\"_EditTask_main__3Fhxk\",\"date\":\"_EditTask_date__34M7F\",\"title\":\"_EditTask_title__3GR8c\",\"body\":\"_EditTask_body__R2Iz4\",\"bottom\":\"_EditTask_bottom__ko6Io\",\"saveBtn\":\"_EditTask_saveBtn__A5bWN\",\"trashBtn\":\"_EditTask_trashBtn__W1c1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_UpdateProfile_container__26aZS\",\"card\":\"_UpdateProfile_card__1HsHE\",\"cardTitle\":\"_UpdateProfile_cardTitle__2yrDy\",\"cardForm\":\"_UpdateProfile_cardForm__328Cp\",\"cardFormItem\":\"_UpdateProfile_cardFormItem__5K4b5\",\"submitBtn\":\"_UpdateProfile_submitBtn___N2nk\",\"bottom\":\"_UpdateProfile_bottom__mx3ul\",\"loginLink\":\"_UpdateProfile_loginLink__2ZEVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_Signup_container__3tcRL\",\"card\":\"_Signup_card__fJjlk\",\"cardTitle\":\"_Signup_cardTitle__jp5o4\",\"cardForm\":\"_Signup_cardForm__37lfT\",\"bottom\":\"_Signup_bottom__3LuQM\",\"loginLink\":\"_Signup_loginLink__2BpmC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_Login_container__7TvMy\",\"card\":\"_Login_card__3drCU\",\"cardTitle\":\"_Login_cardTitle__3EsnR\",\"cardForm\":\"_Login_cardForm__3PCpa\",\"bottom\":\"_Login_bottom__12BJc\",\"loginLink\":\"_Login_loginLink__2ceMn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_CreateTask_container__14NPP\",\"main\":\"_CreateTask_main__rZXvI\",\"title\":\"_CreateTask_title__1iN2o\",\"form\":\"_CreateTask_form__2v9sw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_ResetPassword_container__2jip4\",\"card\":\"_ResetPassword_card__1OH5k\",\"cardTitle\":\"_ResetPassword_cardTitle__2QPTw\",\"cardForm\":\"_ResetPassword_cardForm__2KRyY\",\"bottom\":\"_ResetPassword_bottom__3vURJ\",\"loginLink\":\"_ResetPassword_loginLink__HWX8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"_Header_header__3hztl\",\"link\":\"_Header_link__2_oj0\",\"active\":\"_Header_active__2qnw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarDay\":\"_Day_calendarDay__mNDxf\",\"center\":\"_Day_center__nMMNW\",\"markers\":\"_Day_markers__3jcAv\",\"uncompleted\":\"_Day_uncompleted__29v-S\",\"completed\":\"_Day_completed__1o39q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_Profile_container__ZWPuh\",\"main\":\"_Profile_main__3Qcuf\",\"themeSwitcher\":\"_Profile_themeSwitcher__1Rgov\",\"update\":\"_Profile_update__g5m3N\",\"logoutBtn\":\"_Profile_logoutBtn__283NU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_ToDo_container__34DUX\",\"tasks\":\"_ToDo_tasks__LNPm7\",\"tasksTitle\":\"_ToDo_tasksTitle__1Y2Lz\",\"tasksList\":\"_ToDo_tasksList__2_KLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"_App_app__2wvhg\",\"main\":\"_App_main__ZbBe_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"_Task_task__3IrLG\",\"taskCheckbox\":\"_Task_taskCheckbox__3Yk_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_Calendar_container__Bjlhp\"};","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nexport const db = app.firestore();\nexport const auth = app.auth();\nexport default app;\n","import { format, parse } from \"date-fns\";\nimport firebase from \"firebase/app\";\nimport { db } from \"../firebase\";\n\nexport interface IToDo {\n  todoId: string;\n  title: string;\n  body: string;\n  isComplete: boolean;\n  createdAt: string;\n}\n\nexport interface INewToDo {\n  title: string;\n  body: string;\n  isComplete: boolean;\n  createdAt: string;\n}\n\nexport interface IDayStatuses {\n  haveCompleted: boolean;\n  haveUncompleted: boolean;\n  date: Date;\n}\n\nexport async function clearDB(): Promise<void> {\n  const newDate = format(new Date(), \"MM_dd_yyyy\");\n  const userDays = db.collection(\"users\").doc(window.userId).collection(\"days\");\n  userDays\n    .where(firebase.firestore.FieldPath.documentId(), \"<\", newDate)\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.docs.forEach((doc) => {\n        doc.ref.delete();\n      });\n    });\n}\n\nexport async function getToDosData(\n  date: Date\n): Promise<firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>> {\n  const newDate = format(new Date(date), \"MM_dd_yyyy\");\n  const userDays = db.collection(\"users\").doc(window.userId).collection(\"days\");\n  return userDays\n    .doc(newDate)\n    .collection(\"todos\")\n    .orderBy(\"createdAt\", \"desc\")\n    .get();\n}\n\nexport async function getDaysStatuses(): Promise<IDayStatuses[]> {\n  const result: IDayStatuses[] = [];\n  const days = db.collection(\"users\").doc(window.userId).collection(\"days\");\n  await days.get().then((data) => {\n    data.forEach((doc) => {\n      result.push({\n        haveCompleted: doc.data().haveCompleted,\n        haveUncompleted: doc.data().haveUncompleted,\n        date: parse(doc.id, \"MM_dd_yyyy\", new Date()),\n      });\n    });\n  });\n  return result;\n}\n\nexport async function addToDo(newTask: INewToDo): Promise<IToDo> {\n  const document = db\n    .collection(\"users\")\n    .doc(window.userId)\n    .collection(\"days\")\n    .doc(format(new Date(newTask.createdAt), \"MM_dd_yyyy\"));\n  await document.set({ haveUncompleted: true });\n  const todo: IToDo = {\n    ...newTask,\n    todoId: \"\",\n  };\n  await document\n    .collection(\"todos\")\n    .add(newTask)\n    .then((doc) => {\n      todo.todoId = doc.id;\n    });\n  return todo;\n}\n\nexport async function removeToDo(day: string, taskId: string): Promise<void> {\n  try {\n    const document = db.doc(\n      `/users/${window.userId}/days/${format(\n        new Date(day),\n        \"MM_dd_yyyy\"\n      )}/todos/${taskId}`\n    );\n    await document\n      .get()\n      .then((doc) => {\n        if (!doc.exists) {\n          throw new Error(\"Todo not found!\");\n        }\n        document.delete();\n        return 1;\n      })\n      .catch(() => {\n        throw new Error(\"Error\");\n      });\n  } catch {\n    throw new Error(\"Error\");\n  }\n}\n\nexport async function editToDo(todo: IToDo, createdAt: string): Promise<void> {\n  try {\n    const document = db.doc(\n      `/users/${window.userId}/days/${format(\n        new Date(createdAt),\n        \"MM_dd_yyyy\"\n      )}/todos/${todo.todoId}`\n    );\n    document.update(todo);\n  } catch {\n    throw new Error(\"Error\");\n  }\n}\n\nexport async function changeToDoStatus(\n  date: string,\n  todoId: string,\n  isComplete: boolean\n): Promise<void> {\n  try {\n    const dayRef = db.doc(\n      `/users/${window.userId}/days/${format(new Date(date), \"MM_dd_yyyy\")}`\n    );\n    dayRef.collection(\"todos\").doc(todoId).update({ isComplete });\n  } catch {\n    throw new Error(\"Error\");\n  }\n}\n\nexport async function changeDayStatuses(statuses: IDayStatuses): Promise<void> {\n  try {\n    const dayRef = db.doc(\n      `/users/${window.userId}/days/${format(\n        new Date(statuses.date),\n        \"MM_dd_yyyy\"\n      )}`\n    );\n    dayRef.update({\n      haveCompleted: statuses.haveCompleted,\n      haveUncompleted: statuses.haveUncompleted,\n    });\n  } catch {\n    throw new Error(\"Error\");\n  }\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { clearDB } from \"@events/dbEvents\";\nimport { auth } from \"../firebase\";\n\ndeclare global {\n  interface Window {\n    userId: string;\n  }\n}\n\ninterface IAuthContextValue {\n  currentUser: firebase.User;\n  signup: (\n    email: string,\n    password: string\n  ) => Promise<firebase.auth.UserCredential>;\n  login: (\n    email: string,\n    password: string\n  ) => Promise<firebase.auth.UserCredential>;\n  logout: () => Promise<void>;\n  resetPassword: (email: string) => Promise<void>;\n  updateEmail: (email: string) => Promise<void>;\n  updatePassword: (password: string) => Promise<void>;\n}\n\ninterface IAuthProviderProps {\n  children: JSX.Element;\n}\n\nconst AuthContext = React.createContext<IAuthContextValue>(\n  {} as IAuthContextValue\n);\n\nexport function useAuth(): IAuthContextValue {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }: IAuthProviderProps): JSX.Element {\n  const [currentUser, setCurrentUser] = useState<firebase.User>(\n    {} as firebase.User\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n\n  function signup(email: string, password: string) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function login(email: string, password: string) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email: string) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email: string) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password: string) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    clearDB();\n    const unsubscribe = auth.onAuthStateChanged((user): void => {\n      if (user) {\n        window.userId = user.uid;\n        setCurrentUser(user);\n      }\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"@contexts/AuthContext\";\nimport styles from \"./_Signup.module.scss\";\n\nexport default function Signup(): JSX.Element {\n  const emailRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const passwordRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const passwordConfirmRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const { signup } = useAuth();\n  const [error, setError] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const history = useHistory();\n\n  async function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    if (passwordRef.current.value === passwordConfirmRef.current.value) {\n      try {\n        setError(\"\");\n        setLoading(true);\n        await signup(emailRef.current.value, passwordRef.current.value);\n        setLoading(false);\n        history.push(\"/\");\n      } catch {\n        setError(\"Failed to create an account\");\n      }\n    } else {\n      setLoading(false);\n      setError(\"Password do not match\");\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n        <h2 className={styles.cardTitle}>Sing Up</h2>\n        {error}\n        <form className={styles.cardForm} onSubmit={handleSubmit}>\n          <label className=\"c-input\" htmlFor=\"email\">\n            <p>Email:</p>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              ref={emailRef}\n              required\n            />\n          </label>\n          <label className=\"c-input\" htmlFor=\"password\">\n            <p>Password:</p>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              ref={passwordRef}\n              required\n            />\n          </label>\n          <label className=\"c-input\" htmlFor=\"password-confirm\">\n            <p>Password Confirm:</p>\n            <input\n              id=\"password-confirm\"\n              name=\"password-confirm\"\n              type=\"password\"\n              ref={passwordConfirmRef}\n              required\n            />\n          </label>\n          <button disabled={loading} className=\"c-btn-blue\" type=\"submit\">\n            Sign Up\n          </button>\n        </form>\n      </div>\n      <div className={styles.bottom}>\n        Already have an account?\n        <Link className={styles.loginLink} to=\"/login\">\n          Log In\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"@contexts/AuthContext\";\nimport styles from \"./_Login.module.scss\";\n\nexport default function Login(): JSX.Element {\n  const emailRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const passwordRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const { login } = useAuth();\n  const [error, setError] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const history = useHistory();\n\n  async function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      setLoading(false);\n      history.push(\"/\");\n    } catch {\n      setLoading(false);\n      setError(\"Failed to sign in\");\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n        <h2 className={styles.cardTitle}>Log In</h2>\n        {error}\n        <form className={styles.cardForm} onSubmit={handleSubmit}>\n          <label className=\"c-input\" htmlFor=\"email\">\n            <p>Email:</p>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              ref={emailRef}\n              required\n            />\n          </label>\n          <label className=\"c-input\" htmlFor=\"password\">\n            <p>Password:</p>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              ref={passwordRef}\n              required\n            />\n          </label>\n          <button disabled={loading} className=\"c-btn-blue\" type=\"submit\">\n            Log In\n          </button>\n          <Link to=\"/reset-password\">Forgot password?</Link>\n        </form>\n      </div>\n      <div className={styles.bottom}>\n        Need an account?\n        <Link className={styles.loginLink} to=\"/register\">\n          Sign Up\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./_Header.module.scss\";\n\ninterface IHeader {\n  page: string;\n}\n\nexport default function Header({ page }: IHeader): JSX.Element {\n  return (\n    <div className={styles.header}>\n      <Link\n        className={`${styles.link} ${page === \"todo\" ? styles.active : \"\"}`}\n        to=\"/\"\n      >\n        To-Do\n      </Link>\n      <Link\n        className={`${styles.link} ${page === \"profile\" ? styles.active : \"\"}`}\n        to=\"/profile\"\n      >\n        Profile\n      </Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport { IDayStatuses } from \"@events/dbEvents\";\nimport styles from \"./_Day.module.scss\";\n\ninterface IDayProps {\n  isSelected: boolean;\n  currentDate: Date;\n  setSelectedDate: (date: Date) => void;\n  dayStatuses: IDayStatuses | undefined;\n}\n\nexport default function Day({\n  isSelected,\n  currentDate,\n  setSelectedDate,\n  dayStatuses,\n}: IDayProps): JSX.Element {\n  return (\n    <>\n      <button\n        className={`${styles.calendarDay} ${isSelected ? \"active\" : \"\"}`}\n        type=\"button\"\n        onClick={() => setSelectedDate(currentDate)}\n        disabled={isSelected}\n      >\n        <div className={styles.center}>\n          <p>{format(currentDate, \"eee\")}</p>\n          <p>{format(currentDate, \"dd\")}</p>\n        </div>\n      </button>\n      <div className={styles.markers}>\n        {dayStatuses && dayStatuses.haveUncompleted ? (\n          <span className={styles.uncompleted}> </span>\n        ) : null}\n        {dayStatuses && dayStatuses.haveCompleted ? (\n          <span className={styles.completed}> </span>\n        ) : null}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { format, endOfMonth, addDays } from \"date-fns\";\nimport Slider from \"react-slick\";\nimport { IDayStatuses } from \"@events/dbEvents\";\nimport styles from \"./_Calendar.module.scss\";\nimport Day from \"./Day/Day\";\n\ninterface ICalendarProps {\n  selectedDate: Date;\n  setSelectedDate(date: Date): void;\n  daysStatuses: IDayStatuses[];\n}\n\nexport default function Calendar({\n  selectedDate,\n  setSelectedDate,\n  daysStatuses,\n}: ICalendarProps): JSX.Element {\n  const sliderAdaptive = [\n    {\n      breakpoint: 660,\n      settings: {\n        slidesToShow: 6,\n        slidesToScroll: 6,\n      },\n    },\n    {\n      breakpoint: 400,\n      settings: {\n        slidesToShow: 5,\n        slidesToScroll: 5,\n      },\n    },\n  ];\n\n  function createCalendar(): JSX.Element[] {\n    const newDate = new Date();\n    const daysLeft = endOfMonth(newDate).getDate() - newDate.getDate();\n    const result: JSX.Element[] = [];\n    for (let i = 0; i <= daysLeft; i += 1) {\n      const currentDate = addDays(newDate, i);\n      const isSelected =\n        format(selectedDate, \"MM/dd/yyyy\") ===\n        format(currentDate, \"MM/dd/yyyy\");\n      const currentStatuses = daysStatuses.find(\n        (elem) =>\n          format(new Date(elem.date), \"MM/dd/yyyy\") ===\n          format(currentDate, \"MM/dd/yyyy\")\n      );\n      result.push(\n        <Day\n          key={i}\n          isSelected={isSelected}\n          currentDate={currentDate}\n          setSelectedDate={setSelectedDate}\n          dayStatuses={currentStatuses}\n        />\n      );\n    }\n    return result;\n  }\n\n  return (\n    <div className={styles.container}>\n      <Slider\n        dots\n        speed={500}\n        slidesToShow={8}\n        slidesToScroll={8}\n        infinite={false}\n        responsive={sliderAdaptive}\n      >\n        {createCalendar()}\n      </Slider>\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { addToDo, INewToDo, IToDo } from \"@events/dbEvents\";\nimport styles from \"./_CreateTask.module.scss\";\n\ninterface ICreateTaskProps {\n  closeCreator: CallableFunction;\n  addToDoLocal: (newToDo: IToDo) => void;\n  selectedDate: Date;\n}\n\nexport default function CreateTask({\n  closeCreator,\n  addToDoLocal,\n  selectedDate,\n}: ICreateTaskProps): JSX.Element {\n  const titleRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const bodyRef = useRef<HTMLTextAreaElement>({} as HTMLTextAreaElement);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>(\"\");\n\n  const handleClickOutside = (e: React.MouseEvent): void => {\n    if ((e.target as HTMLDivElement).className === styles.container) {\n      closeCreator();\n    }\n  };\n\n  function handleCreateTask(e: React.FormEvent) {\n    e.preventDefault();\n\n    setLoading(true);\n\n    const newTask: INewToDo = {\n      title: titleRef.current.value,\n      body: bodyRef.current.value,\n      isComplete: false,\n      createdAt: selectedDate.toISOString(),\n    };\n\n    addToDo(newTask)\n      .then((todo) => {\n        setLoading(false);\n        addToDoLocal(todo);\n        closeCreator();\n      })\n      .catch(() => {\n        setLoading(false);\n        setError(\"Error\");\n      });\n  }\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClickOutside}\n      role=\"presentation\"\n    >\n      <div className={styles.main}>\n        <p className={styles.title}>Create Task</p>\n        <button\n          className=\"c-closeCross\"\n          onClick={() => closeCreator()}\n          type=\"button\"\n          aria-label=\"Close\"\n        />\n        {error && (\n          <div className={styles.error}>\n            <p>{error}</p>\n          </div>\n        )}\n        <form className={styles.form} onSubmit={handleCreateTask}>\n          <label className=\"c-input\" htmlFor=\"task-title\">\n            Title:\n            <input\n              ref={titleRef}\n              id=\"task-title\"\n              name=\"task-title\"\n              type=\"text\"\n              required\n            />\n          </label>\n          <label\n            className=\"c-input\"\n            style={{ height: \"100%\" }}\n            htmlFor=\"task-body\"\n          >\n            Details:\n            <textarea\n              ref={bodyRef}\n              id=\"task-body\"\n              style={{ height: \"100%\" }}\n              name=\"task-body\"\n            />\n          </label>\n          <button disabled={loading} className=\"c-btn-blue\" type=\"submit\">\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/trash.c49a10b9.svg\";","import React, { useState, useRef } from \"react\";\nimport { format } from \"date-fns\";\nimport trashIcon from \"@assets/icons/trash.svg\";\nimport { removeToDo, editToDo, IToDo } from \"@events/dbEvents\";\nimport styles from \"./_EditTask.module.scss\";\n\ninterface ITaskProps {\n  closeTask: CallableFunction;\n  editToDoLocal: (task: IToDo) => void;\n  removeToDoLocal: (taskId: string) => void;\n  task: IToDo;\n}\n\nexport default function Task({\n  closeTask,\n  editToDoLocal,\n  removeToDoLocal,\n  task,\n}: ITaskProps): JSX.Element {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>(\"\");\n  const [taskChanged, setTaskChanged] = useState<boolean>(false);\n\n  const titleRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const bodyRef = useRef<HTMLTextAreaElement>({} as HTMLTextAreaElement);\n\n  const handleClickOutside = (e: React.MouseEvent): void => {\n    if ((e.target as HTMLDivElement).className === styles.container) {\n      closeTask();\n    }\n  };\n\n  const handleTaskEdit = (): void => {\n    if (\n      taskChanged &&\n      titleRef.current.value === task.title &&\n      bodyRef.current.value === task.body\n    ) {\n      setTaskChanged(false);\n    } else if (!taskChanged) {\n      setTaskChanged(true);\n    }\n  };\n\n  const handleSaveChanges = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    setLoading(true);\n\n    const newToDo = {\n      todoId: task.todoId,\n      title: titleRef.current.value,\n      body: bodyRef.current.value,\n      isComplete: task.isComplete,\n      createdAt: task.createdAt,\n    };\n\n    editToDo(newToDo as IToDo, task.createdAt)\n      .then(() => {\n        closeTask();\n        editToDoLocal(newToDo);\n      })\n      .catch(() => setLoading(false));\n  };\n\n  const removeTask = () => {\n    setError(\"\");\n    setLoading(true);\n\n    removeToDo(task.createdAt, task.todoId)\n      .then(() => {\n        closeTask();\n        removeToDoLocal(task.todoId);\n      })\n      .catch(() => {\n        setError(\"Error\");\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClickOutside}\n      role=\"presentation\"\n    >\n      <form className={styles.main} onSubmit={handleSaveChanges}>\n        {error && error}\n        <button\n          className=\"c-closeCross\"\n          onClick={() => closeTask()}\n          type=\"button\"\n          aria-label=\"Close\"\n        />\n        <p className={styles.date}>\n          {format(new Date(task.createdAt), \"MM/dd/yyyy\")}\n        </p>\n        <input\n          className={styles.title}\n          ref={titleRef}\n          defaultValue={task.title}\n          onChange={handleTaskEdit}\n        />\n        <textarea\n          className={styles.body}\n          ref={bodyRef}\n          defaultValue={task.body}\n          onChange={handleTaskEdit}\n        />\n        <div className={styles.bottom}>\n          <button\n            className=\"c-btn-blue\"\n            style={{ width: \"68px\" }}\n            type=\"submit\"\n            disabled={!taskChanged || loading}\n          >\n            Save\n          </button>\n          <button\n            className={styles.trashBtn}\n            disabled={loading}\n            type=\"button\"\n            onClick={removeTask}\n          >\n            <img src={trashIcon} alt=\"trash\" />\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { IToDo, changeToDoStatus } from \"@events/dbEvents\";\nimport styles from \"./_Task.module.scss\";\n\ninterface ITaskProps {\n  task: IToDo;\n  setSelectedTask: React.Dispatch<React.SetStateAction<IToDo | null>>;\n  checkDayStatuses: (todoId: string, todoIsComplete: boolean) => void;\n}\n\nexport default function Task({\n  task,\n  setSelectedTask,\n  checkDayStatuses,\n}: ITaskProps): JSX.Element {\n  function handlerChangeToDoStatus(\n    e: React.ChangeEvent<HTMLInputElement>,\n    todo: IToDo\n  ) {\n    e.target.readOnly = true;\n    changeToDoStatus(todo.createdAt, todo.todoId, !todo.isComplete).then(() => {\n      checkDayStatuses(todo.todoId, !todo.isComplete);\n      e.target.readOnly = false;\n    });\n  }\n\n  return (\n    <div\n      className={styles.task}\n      key={task.todoId}\n      onClick={() => setSelectedTask(task)}\n      role=\"presentation\"\n    >\n      <div className={styles.taskCheckbox}>\n        <input\n          type=\"checkbox\"\n          defaultChecked={task.isComplete}\n          onChange={(e) => handlerChangeToDoStatus(e, task)}\n          onClick={(e) => e.stopPropagation()}\n        />\n        <span> </span>\n      </div>\n      <p>{task.title}</p>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { format } from \"date-fns\";\nimport {\n  getToDosData,\n  IToDo,\n  changeDayStatuses,\n  IDayStatuses,\n  getDaysStatuses,\n} from \"@events/dbEvents\";\nimport Header from \"@components/Header/Header\";\nimport styles from \"./_ToDo.module.scss\";\nimport Calendar from \"./Calendar/Calendar\";\nimport CreateTask from \"./CreateTask/CreateTask\";\nimport EditTask from \"./EditTask/EditTask\";\nimport Task from \"./Task/Task\";\n\nexport default function ToDo(): JSX.Element {\n  const [toDos, setToDos] = useState<IToDo[]>([]);\n  const [creation, setCreation] = useState<boolean>(false);\n  const [selectedTask, setSelectedTask] = useState<IToDo | null>(null);\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n  const [daysStatuses, setDaysStatuses] = useState<IDayStatuses[]>(\n    [] as IDayStatuses[]\n  );\n\n  function checkDayStatuses(\n    todoId: string,\n    todoIsComplete: boolean,\n    currentToDos = toDos\n  ) {\n    const todayStatusesIndex = daysStatuses.findIndex(\n      (elem) =>\n        format(new Date(elem.date), \"MM/dd/yyyy\") ===\n        format(selectedDate, \"MM/dd/yyyy\")\n    );\n    const todayStatuses = daysStatuses[todayStatusesIndex];\n    if (todayStatuses) {\n      const newToDos = [...currentToDos];\n      let haveCompleted = false;\n      let haveUncompleted = false;\n      const todoIndex = newToDos.findIndex((elem) => elem.todoId === todoId);\n      newToDos[todoIndex].isComplete = todoIsComplete;\n      newToDos.forEach((elem) => {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        elem.isComplete ? (haveCompleted = true) : (haveUncompleted = true);\n      });\n      if (\n        todayStatuses.haveCompleted !== haveCompleted ||\n        todayStatuses.haveUncompleted !== haveUncompleted\n      ) {\n        const newDayStatuses = {\n          haveCompleted,\n          haveUncompleted,\n          date: todayStatuses.date,\n        };\n        changeDayStatuses(newDayStatuses);\n        const newDaysStatuses = [...daysStatuses];\n        newDaysStatuses[todayStatusesIndex] = newDayStatuses;\n        setDaysStatuses(newDaysStatuses);\n      }\n    } else {\n      const newDayStatuses = {\n        haveCompleted: false,\n        haveUncompleted: true,\n        date: selectedDate,\n      };\n      changeDayStatuses(newDayStatuses);\n      const newDaysStatuses = [...daysStatuses, newDayStatuses];\n      setDaysStatuses(newDaysStatuses);\n    }\n  }\n\n  const addToDoLocal = (newToDo: IToDo): void => {\n    const newToDos = [newToDo, ...toDos];\n    setToDos(newToDos);\n    checkDayStatuses(newToDo.todoId, newToDo.isComplete, newToDos);\n  };\n\n  const editToDoLocal = (task: IToDo): void => {\n    const newToDos = [...toDos];\n    const editedToDoIndex = newToDos.findIndex(\n      (elem) => elem.todoId === task.todoId\n    );\n    newToDos[editedToDoIndex] = task;\n    setToDos(newToDos);\n  };\n\n  const removeToDoLocal = (taskId: string): void => {\n    const newToDos = [...toDos];\n    const removedTaskIndex = newToDos.findIndex(\n      (elem) => elem.todoId === taskId\n    );\n    newToDos.splice(removedTaskIndex, 1);\n    setToDos(newToDos);\n    const todayStatusesIndex = daysStatuses.findIndex(\n      (elem) =>\n        format(new Date(elem.date), \"MM/dd/yyyy\") ===\n        format(selectedDate, \"MM/dd/yyyy\")\n    );\n    const todayStatuses = daysStatuses[todayStatusesIndex];\n    let haveCompleted = false;\n    let haveUncompleted = false;\n    newToDos.forEach((elem) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      elem.isComplete ? (haveCompleted = true) : (haveUncompleted = true);\n    });\n    if (\n      todayStatuses.haveCompleted !== haveCompleted ||\n      todayStatuses.haveUncompleted !== haveUncompleted\n    ) {\n      const newDayStatuses = {\n        haveCompleted,\n        haveUncompleted,\n        date: todayStatuses.date,\n      };\n      changeDayStatuses(newDayStatuses);\n      const newDaysStatuses = [...daysStatuses];\n      newDaysStatuses[todayStatusesIndex] = newDayStatuses;\n      setDaysStatuses(newDaysStatuses);\n    }\n  };\n\n  useEffect(() => {\n    getDaysStatuses().then((data) => {\n      setDaysStatuses(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    getToDosData(selectedDate).then((data) => {\n      const ToDos: IToDo[] = [];\n      data.forEach((doc) => {\n        ToDos.push({\n          todoId: doc.id,\n          title: doc.data().title,\n          body: doc.data().body,\n          isComplete: doc.data().isComplete,\n          createdAt: doc.data().createdAt,\n        });\n      });\n      setToDos(ToDos);\n    });\n  }, [selectedDate]);\n\n  return (\n    <div className={styles.container}>\n      <Header page=\"todo\" />\n      <Calendar\n        selectedDate={selectedDate}\n        setSelectedDate={(date: Date) => setSelectedDate(date)}\n        daysStatuses={daysStatuses}\n      />\n      <div className={styles.tasks}>\n        <p className={styles.tasksTitle}>Tasks</p>\n        <div className={styles.tasksList}>\n          {toDos.map((item) => {\n            return (\n              <Task\n                key={item.todoId}\n                task={item}\n                setSelectedTask={setSelectedTask}\n                checkDayStatuses={checkDayStatuses}\n              />\n            );\n          })}\n        </div>\n        <button\n          className=\"c-btn-orange\"\n          style={{ width: \"100%\" }}\n          type=\"button\"\n          onClick={() => setCreation(true)}\n        >\n          Create task\n        </button>\n      </div>\n      {creation && (\n        <CreateTask\n          closeCreator={() => setCreation(false)}\n          addToDoLocal={addToDoLocal}\n          selectedDate={selectedDate}\n        />\n      )}\n      {selectedTask && (\n        <EditTask\n          closeTask={() => setSelectedTask(null)}\n          editToDoLocal={(task) => editToDoLocal(task)}\n          removeToDoLocal={(taskId) => removeToDoLocal(taskId)}\n          task={selectedTask}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useAuth } from \"@contexts/AuthContext\";\nimport styles from \"./_Profile.module.scss\";\nimport Header from \"../Header/Header\";\n\ninterface IProfileProps {\n  switchTheme: CallableFunction;\n}\n\nexport default function Profile({ switchTheme }: IProfileProps): JSX.Element {\n  const [error, setError] = useState<string>();\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n\n  async function handleLogout(): Promise<void> {\n    try {\n      await logout();\n      history.push(\"./login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Header page=\"profile\" />\n      {error && error}\n      <div className={styles.main}>\n        Profile: {currentUser.email}\n        <button\n          className={styles.themeSwitcher}\n          onClick={() => switchTheme()}\n          type=\"button\"\n        >\n          Switch theme\n        </button>\n        <Link className={styles.update} to=\"/update-profile\">\n          Update Profile\n        </Link>\n        <button\n          className={styles.logoutBtn}\n          type=\"button\"\n          onClick={handleLogout}\n        >\n          Log Out\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"@contexts/AuthContext\";\nimport styles from \"./_ResetPassword.module.scss\";\n\nexport default function ResetPassword(): JSX.Element {\n  const emailRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const { resetPassword } = useAuth();\n  const [error, setError] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n\n  async function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    try {\n      setMessage(\"\");\n      setError(\"\");\n      setLoading(true);\n      await resetPassword(emailRef.current.value);\n      setMessage(\"Check your inbox for further instructions\");\n    } catch {\n      setError(\"Failed to reset password\");\n    }\n    setLoading(false);\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n        <h2 className={styles.cardTitle}>Reset Password</h2>\n        {error}\n        {message}\n        <form className={styles.cardForm} onSubmit={handleSubmit}>\n          <label className=\"c-input\" htmlFor=\"email\">\n            <p>Email:</p>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              ref={emailRef}\n              required\n            />\n          </label>\n          <button disabled={loading} className=\"c-btn-blue\" type=\"submit\">\n            Send\n          </button>\n          <Link to=\"/login\">Log In</Link>\n        </form>\n      </div>\n      <div className={styles.bottom}>\n        Need an account?\n        <Link className={styles.loginLink} to=\"/register\">\n          Sign Up\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"@contexts/AuthContext\";\nimport styles from \"./_UpdateProfile.module.scss\";\n\nexport default function UpdateProfile(): JSX.Element {\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const confirmPasswordRef = useRef<HTMLInputElement>(null);\n  const { currentUser, updateEmail, updatePassword } = useAuth();\n  const [error, setError] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const history = useHistory();\n\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    if (emailRef.current && passwordRef.current && confirmPasswordRef.current) {\n      if (passwordRef.current.value === confirmPasswordRef.current.value) {\n        setLoading(true);\n        setError(\"\");\n\n        const promises = [];\n        if (emailRef.current.value !== currentUser.email) {\n          promises.push(updateEmail(emailRef.current.value));\n        }\n        if (passwordRef.current.value) {\n          promises.push(updatePassword(passwordRef.current.value));\n        }\n\n        Promise.all(promises)\n          .then(() => {\n            history.push(\"/profile\");\n          })\n          .catch(() => {\n            setError(\"Failed to update profile\");\n          })\n          .finally(() => {\n            setLoading(false);\n          });\n      } else {\n        setError(\"Password do not match\");\n      }\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n        <h2 className={styles.cardTitle}>Update Profile</h2>\n        {error}\n        <form className={styles.cardForm} onSubmit={handleSubmit}>\n          <label className={styles.cardFormItem} htmlFor=\"email\">\n            <p>Email:</p>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              ref={emailRef}\n              required\n              defaultValue={currentUser.email ? currentUser.email : \"\"}\n            />\n          </label>\n          <label className={styles.cardFormItem} htmlFor=\"password\">\n            <p>Password:</p>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              ref={passwordRef}\n              placeholder=\"Leave blank to keep the same\"\n            />\n          </label>\n          <label className={styles.cardFormItem} htmlFor=\"confirm-password\">\n            <p>Confirm Password:</p>\n            <input\n              id=\"confirm-password\"\n              name=\"confirm-password\"\n              type=\"password\"\n              ref={confirmPasswordRef}\n              placeholder=\"Leave blank to keep the same\"\n            />\n          </label>\n          <button disabled={loading} className={styles.submitBtn} type=\"submit\">\n            Update\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport { useAuth } from \"@contexts/AuthContext\";\n\ninterface IPrivateRouteProps {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  component: (props: any) => JSX.Element;\n}\n\nexport default function PrivateRoute({\n  component: Component,\n  ...rest\n}: IPrivateRouteProps & RouteProps): JSX.Element {\n  const { currentUser } = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={(props): React.ReactNode => {\n        return currentUser.uid ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        );\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AuthProvider } from \"@contexts/AuthContext\";\nimport styles from \"./_App.module.scss\";\nimport Signup from \"./Signup/Signup\";\nimport Login from \"./Login/Login\";\nimport ToDo from \"./ToDo/ToDo\";\nimport Profile from \"./Profile/Profile\";\nimport ResetPassword from \"./ResetPassword/ResetPassword\";\nimport UpdateProfile from \"./UpdateProfile/UpdateProfile\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nexport default function App(): JSX.Element {\n  const [theme, setTheme] = useState<string>(\n    localStorage.theme ? localStorage.theme : \"dark\"\n  );\n\n  const switchTheme = (): void => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n    localStorage.theme = newTheme;\n  };\n\n  return (\n    <div className={`${styles.app} ${theme}`}>\n      <div className={styles.main}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={ToDo} />\n              <PrivateRoute\n                path=\"/profile\"\n                component={() => <Profile switchTheme={switchTheme} />}\n              />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/register\" component={Signup} />\n              <Route path=\"/reset-password\" component={ResetPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"@components/App\";\nimport \"@assets/styles/common.scss\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}