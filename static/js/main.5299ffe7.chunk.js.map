{"version":3,"sources":["pages/ToDo/EditTask/_EditTask.module.scss","pages/UpdateProfile/_UpdateProfile.module.scss","pages/ToDo/CreateTask/_CreateTask.module.scss","pages/Signup/_Signup.module.scss","pages/Login/_Login.module.scss","pages/ResetPassword/_ResetPassword.module.scss","components/Header/_Header.module.scss","pages/ToDo/Calendar/Day/_Day.module.scss","pages/ToDo/_ToDo.module.scss","pages/Profile/_Profile.module.scss","pages/ToDo/Task/_Task.module.scss","_App.module.scss","pages/ToDo/Calendar/_Calendar.module.scss","firebase.ts","events/dbEvents.ts","contexts/AuthContext.tsx","contexts/ToDoContext.tsx","constants/routes.ts","pages/Signup/Signup.tsx","pages/Login/Login.tsx","components/Header/Header.tsx","components/PrivateRoute.tsx","pages/ToDo/Calendar/Day/Day.tsx","pages/ToDo/Calendar/Calendar.tsx","pages/ToDo/CreateTask/CreateTask.tsx","assets/icons/trash.svg","pages/ToDo/EditTask/EditTask.tsx","pages/ToDo/Task/Task.tsx","pages/ToDo/ToDo.tsx","pages/Profile/Profile.tsx","pages/ResetPassword/ResetPassword.tsx","pages/UpdateProfile/UpdateProfile.tsx","App.tsx","index.tsx"],"names":["module","exports","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","a","newDate","format","Date","collection","doc","window","userId","where","FieldPath","documentId","get","then","querySnapshot","docs","forEach","ref","delete","date","dateRef","orderBy","result","days","data","push","haveCompleted","haveUncompleted","parse","id","newTask","taskDate","createdAt","dayRef","set","todo","todoId","add","day","taskId","formattingDay","taskRef","exists","Error","catch","update","isComplete","formattingDate","changeDayStatuses","statuses","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","clearDB","onAuthStateChanged","user","uid","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","ToDoContext","HOME_ROUTE","PROFILE_ROUTE","UPDATE_PROFILE_ROUTE","LOGIN_ROUTE","REGISTER_ROUTE","RESET_PASSWORD_ROUTE","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","preventDefault","current","passwordConfirm","className","styles","container","card","cardTitle","cardForm","onSubmit","htmlFor","name","type","required","disabled","bottom","loginLink","to","Login","HeaderInner","activePage","location","pathname","header","link","active","Header","memo","PrivateRoute","Component","component","path","render","DayInner","isSelected","currentDate","setSelectedDate","dayStatuses","calendarDay","onClick","center","markers","uncompleted","completed","Day","Calendar","selectedDate","daysStatuses","setDays","daysLeft","endOfMonth","getDate","i","addDays","currentStatuses","find","elem","dots","speed","slidesToShow","slidesToScroll","infinite","responsive","breakpoint","settings","CreateTask","closeCreator","titleRef","bodyRef","addToDoLocal","target","role","main","title","aria-label","form","addToDo","body","toISOString","Task","closeTask","task","taskChanged","setTaskChanged","editToDoLocal","removeToDoLocal","handleTaskEdit","newToDo","editToDo","defaultValue","onChange","saveBtn","trashBtn","removeToDo","src","trashIcon","alt","setSelectedTask","checkDayStatuses","handlerChangeToDoStatus","readOnly","changeToDoStatus","taskCheckbox","defaultChecked","stopPropagation","ToDo","toDos","setToDos","creation","setCreation","selectedTask","setDaysStatuses","useCallback","todoIsComplete","currentToDos","todayStatusesIndex","findIndex","todayStatuses","newToDos","todoIndex","newDayStatuses","newDaysStatuses","getDaysStatuses","getToDosData","ToDos","editedToDoIndex","removedTaskIndex","splice","tasks","tasksTitle","tasksList","map","item","createTaskBtn","Profile","switchTheme","themeSwitcher","logoutBtn","ResetPassword","message","setMessage","UpdateProfile","promises","Promise","all","finally","cardFormItem","placeholder","submitBtn","App","localStorage","theme","setTheme","newTheme","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5299ffe7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_EditTask_container__3KcE2\",\"main\":\"_EditTask_main__PKqyH\",\"date\":\"_EditTask_date__2qSgj\",\"title\":\"_EditTask_title__2DsUS\",\"body\":\"_EditTask_body__2F1Bq\",\"bottom\":\"_EditTask_bottom__211tV\",\"saveBtn\":\"_EditTask_saveBtn__W5sZ0\",\"trashBtn\":\"_EditTask_trashBtn__vJUj4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_UpdateProfile_container__3Vj7O\",\"card\":\"_UpdateProfile_card__iGM4T\",\"cardTitle\":\"_UpdateProfile_cardTitle__3Wl7L\",\"cardForm\":\"_UpdateProfile_cardForm__S7Tdb\",\"cardFormItem\":\"_UpdateProfile_cardFormItem__3VWJG\",\"submitBtn\":\"_UpdateProfile_submitBtn__3yiB7\",\"bottom\":\"_UpdateProfile_bottom__2Wto5\",\"loginLink\":\"_UpdateProfile_loginLink__3Xy7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_CreateTask_container__1YzXG\",\"main\":\"_CreateTask_main__RvsTp\",\"title\":\"_CreateTask_title__1BZYB\",\"form\":\"_CreateTask_form__1BBLG\",\"body\":\"_CreateTask_body__2AnZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_Signup_container__1Rk6i\",\"card\":\"_Signup_card__hFoRp\",\"cardTitle\":\"_Signup_cardTitle__3Xo-l\",\"cardForm\":\"_Signup_cardForm__F0ZHA\",\"bottom\":\"_Signup_bottom__1dwQB\",\"loginLink\":\"_Signup_loginLink__2Zdu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_Login_container__3W2Cj\",\"card\":\"_Login_card__2Oii5\",\"cardTitle\":\"_Login_cardTitle__29AEm\",\"cardForm\":\"_Login_cardForm__2wn_1\",\"bottom\":\"_Login_bottom__K6IoX\",\"loginLink\":\"_Login_loginLink__2wvdp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_ResetPassword_container__3HW5y\",\"card\":\"_ResetPassword_card__2br4f\",\"cardTitle\":\"_ResetPassword_cardTitle__1f7d-\",\"cardForm\":\"_ResetPassword_cardForm__1AK5u\",\"bottom\":\"_ResetPassword_bottom__ec2a9\",\"loginLink\":\"_ResetPassword_loginLink__2ltow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"_Header_header__3hztl\",\"link\":\"_Header_link__2_oj0\",\"active\":\"_Header_active__2qnw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarDay\":\"_Day_calendarDay__3zMph\",\"center\":\"_Day_center__1WMbq\",\"markers\":\"_Day_markers__2jpKm\",\"uncompleted\":\"_Day_uncompleted__1dVF-\",\"completed\":\"_Day_completed__2oMeZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_ToDo_container__3c8_Z\",\"tasks\":\"_ToDo_tasks__3xqqG\",\"createTaskBtn\":\"_ToDo_createTaskBtn__Sumrf\",\"tasksTitle\":\"_ToDo_tasksTitle__cxogq\",\"tasksList\":\"_ToDo_tasksList__ZQV5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_Profile_container__1un71\",\"main\":\"_Profile_main__2VACz\",\"themeSwitcher\":\"_Profile_themeSwitcher__HilR7\",\"update\":\"_Profile_update__3WeYb\",\"logoutBtn\":\"_Profile_logoutBtn__3Wflu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"_Task_task__1cIOJ\",\"taskCheckbox\":\"_Task_taskCheckbox__DSv-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"_App_app__1JjX6\",\"main\":\"_App_main__1jhh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_Calendar_container__3kDqh\"};","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nexport const db = app.firestore();\nexport const auth = app.auth();\nexport default app;\n","import { format, parse } from \"date-fns\";\nimport firebase from \"firebase/app\";\nimport { db } from \"../firebase\";\n\nexport interface IToDo {\n  todoId: string;\n  title: string;\n  body: string;\n  isComplete: boolean;\n  createdAt: string;\n}\n\nexport interface INewToDo {\n  title: string;\n  body: string;\n  isComplete: boolean;\n  createdAt: string;\n}\n\nexport interface IDayStatuses {\n  haveCompleted: boolean;\n  haveUncompleted: boolean;\n  date: Date;\n}\n\nexport async function clearDB(): Promise<void> {\n  const newDate = format(new Date(), \"MM_dd_yyyy\");\n  const userDays = db.collection(\"users\").doc(window.userId).collection(\"days\");\n  userDays\n    .where(firebase.firestore.FieldPath.documentId(), \"<\", newDate)\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.docs.forEach((doc) => {\n        doc.ref.delete();\n      });\n    });\n}\n\nexport async function getToDosData(\n  date: Date\n): Promise<firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>> {\n  const newDate = format(new Date(date), \"MM_dd_yyyy\");\n  const dateRef = db.doc(`/users/${window.userId}/days/${newDate}/`);\n  return dateRef.collection(\"todos\").orderBy(\"createdAt\", \"desc\").get();\n}\n\nexport async function getDaysStatuses(): Promise<IDayStatuses[]> {\n  const result: IDayStatuses[] = [];\n  const days = db.collection(`/users/${window.userId}/days/`);\n  await days.get().then((data) => {\n    data.forEach((doc) => {\n      result.push({\n        haveCompleted: doc.data().haveCompleted,\n        haveUncompleted: doc.data().haveUncompleted,\n        date: parse(doc.id, \"MM_dd_yyyy\", new Date()),\n      });\n    });\n  });\n  return result;\n}\n\nexport async function addToDo(newTask: INewToDo): Promise<IToDo> {\n  const taskDate = format(new Date(newTask.createdAt), \"MM_dd_yyyy\");\n  const dayRef = db.doc(`/users/${window.userId}/days/${taskDate}/`);\n  await dayRef.set({ haveUncompleted: true });\n  const todo: IToDo = {\n    ...newTask,\n    todoId: \"\",\n  };\n  await dayRef\n    .collection(\"todos\")\n    .add(newTask)\n    .then((doc) => {\n      todo.todoId = doc.id;\n    });\n  return todo;\n}\n\nexport async function removeToDo(day: string, taskId: string): Promise<void> {\n  const formattingDay = format(new Date(day), \"MM_dd_yyyy\");\n  try {\n    const taskRef = db.doc(\n      `/users/${window.userId}/days/${formattingDay}/todos/${taskId}`\n    );\n    await taskRef\n      .get()\n      .then((doc) => {\n        if (!doc.exists) {\n          throw new Error(\"Todo not found!\");\n        }\n        taskRef.delete();\n        return 1;\n      })\n      .catch(() => {\n        throw new Error(\"Error\");\n      });\n  } catch {\n    throw new Error(\"Error\");\n  }\n}\n\nexport async function editToDo(todo: IToDo, createdAt: string): Promise<void> {\n  const taskDate = format(new Date(createdAt), \"MM_dd_yyyy\");\n  try {\n    const taskRef = db.doc(\n      `/users/${window.userId}/days/${taskDate}/todos/${todo.todoId}`\n    );\n    taskRef.update(todo);\n  } catch {\n    throw new Error(\"Error\");\n  }\n}\n\nexport async function changeToDoStatus(\n  date: string,\n  todoId: string,\n  isComplete: boolean\n): Promise<void> {\n  try {\n    const formattingDate = format(new Date(date), \"MM_dd_yyyy\");\n    const taskRef = db.doc(\n      `/users/${window.userId}/days/${formattingDate}/todos/${todoId}/`\n    );\n    taskRef.update({ isComplete });\n  } catch {\n    throw new Error(\"Error\");\n  }\n}\n\nexport async function changeDayStatuses(statuses: IDayStatuses): Promise<void> {\n  try {\n    const formattingDate = format(new Date(statuses.date), \"MM_dd_yyyy\");\n    const dayRef = db.doc(`/users/${window.userId}/days/${formattingDate}`);\n    dayRef.update({\n      haveCompleted: statuses.haveCompleted,\n      haveUncompleted: statuses.haveUncompleted,\n    });\n  } catch {\n    throw new Error(\"Error\");\n  }\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { clearDB } from \"@events/dbEvents\";\nimport { auth } from \"../firebase\";\n\ndeclare global {\n  interface Window {\n    userId: string;\n  }\n}\n\ninterface IAuthContextValue {\n  currentUser: firebase.User;\n  signup: (\n    email: string,\n    password: string\n  ) => Promise<firebase.auth.UserCredential>;\n  login: (\n    email: string,\n    password: string\n  ) => Promise<firebase.auth.UserCredential>;\n  logout: () => Promise<void>;\n  resetPassword: (email: string) => Promise<void>;\n  updateEmail: (email: string) => Promise<void>;\n  updatePassword: (password: string) => Promise<void>;\n}\n\ninterface IAuthProviderProps {\n  children: JSX.Element;\n}\n\nconst AuthContext = React.createContext<IAuthContextValue>(\n  {} as IAuthContextValue\n);\n\nexport function useAuth(): IAuthContextValue {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }: IAuthProviderProps): JSX.Element {\n  const [currentUser, setCurrentUser] = useState<firebase.User>(\n    {} as firebase.User\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const signup = (email: string, password: string) =>\n    auth.createUserWithEmailAndPassword(email, password);\n\n  const login = (email: string, password: string) =>\n    auth.signInWithEmailAndPassword(email, password);\n\n  const logout = () => auth.signOut();\n\n  const resetPassword = (email: string) => auth.sendPasswordResetEmail(email);\n\n  const updateEmail = (email: string) => currentUser.updateEmail(email);\n\n  const updatePassword = (password: string) =>\n    currentUser.updatePassword(password);\n\n  useEffect(() => {\n    clearDB();\n    const unsubscribe = auth.onAuthStateChanged((user): void => {\n      if (user) {\n        window.userId = user.uid;\n        setCurrentUser(user);\n      }\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n","import { createContext } from \"react\";\nimport { IToDo } from \"@events/dbEvents\";\n\ninterface IToDoContext {\n  addToDoLocal: (newToDo: IToDo) => void;\n  editToDoLocal: (task: IToDo) => void;\n  removeToDoLocal: (taskId: string) => void;\n}\n\nconst ToDoContext = createContext<IToDoContext>({} as IToDoContext);\n\nexport default ToDoContext;\n","export const HOME_ROUTE = \"/\";\nexport const PROFILE_ROUTE = \"/profile\";\nexport const UPDATE_PROFILE_ROUTE = \"/update-profile\";\nexport const LOGIN_ROUTE = \"/login\";\nexport const REGISTER_ROUTE = \"/register\";\nexport const RESET_PASSWORD_ROUTE = \"/reset-password\";\n","import React, { useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"@contexts/index\";\nimport { HOME_ROUTE, LOGIN_ROUTE } from \"@constants/routes\";\nimport styles from \"./_Signup.module.scss\";\n\nexport default function Signup(): JSX.Element {\n  const emailRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const passwordRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const passwordConfirmRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const { signup } = useAuth();\n  const [error, setError] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const history = useHistory();\n\n  async function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    const email: string = emailRef.current.value;\n    const password: string = passwordRef.current.value;\n    const passwordConfirm: string = passwordConfirmRef.current.value;\n\n    if (password === passwordConfirm) {\n      try {\n        setError(\"\");\n        setLoading(true);\n        await signup(email, password);\n        setLoading(false);\n        history.push(HOME_ROUTE);\n      } catch {\n        setError(\"Failed to create an account\");\n      }\n    } else {\n      setLoading(false);\n      setError(\"Password do not match\");\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n        <h2 className={styles.cardTitle}>Sing Up</h2>\n        {error}\n        <form className={styles.cardForm} onSubmit={handleSubmit}>\n          <label className=\"c-input\" htmlFor=\"email\">\n            <p>Email:</p>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              ref={emailRef}\n              required\n            />\n          </label>\n          <label className=\"c-input\" htmlFor=\"password\">\n            <p>Password:</p>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              ref={passwordRef}\n              required\n            />\n          </label>\n          <label className=\"c-input\" htmlFor=\"password-confirm\">\n            <p>Password Confirm:</p>\n            <input\n              id=\"password-confirm\"\n              name=\"password-confirm\"\n              type=\"password\"\n              ref={passwordConfirmRef}\n              required\n            />\n          </label>\n          <button disabled={loading} className=\"c-btn-blue\" type=\"submit\">\n            Sign Up\n          </button>\n        </form>\n      </div>\n      <div className={styles.bottom}>\n        Already have an account?\n        <Link className={styles.loginLink} to={LOGIN_ROUTE}>\n          Log In\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"@contexts/index\";\nimport {\n  HOME_ROUTE,\n  REGISTER_ROUTE,\n  RESET_PASSWORD_ROUTE,\n} from \"@constants/routes\";\nimport styles from \"./_Login.module.scss\";\n\nexport default function Login(): JSX.Element {\n  const emailRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const passwordRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const { login } = useAuth();\n  const [error, setError] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const history = useHistory();\n\n  async function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      setLoading(false);\n      history.push(HOME_ROUTE);\n    } catch {\n      setLoading(false);\n      setError(\"Failed to sign in\");\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n        <h2 className={styles.cardTitle}>Log In</h2>\n        {error}\n        <form className={styles.cardForm} onSubmit={handleSubmit}>\n          <label className=\"c-input\" htmlFor=\"email\">\n            <p>Email:</p>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              ref={emailRef}\n              required\n            />\n          </label>\n          <label className=\"c-input\" htmlFor=\"password\">\n            <p>Password:</p>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              ref={passwordRef}\n              required\n            />\n          </label>\n          <button disabled={loading} className=\"c-btn-blue\" type=\"submit\">\n            Log In\n          </button>\n          <Link to={RESET_PASSWORD_ROUTE}>Forgot password?</Link>\n        </form>\n      </div>\n      <div className={styles.bottom}>\n        Need an account?\n        <Link className={styles.loginLink} to={REGISTER_ROUTE}>\n          Sign Up\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React, { memo } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { HOME_ROUTE, PROFILE_ROUTE } from \"@constants/routes\";\nimport styles from \"./_Header.module.scss\";\n\nfunction HeaderInner(): JSX.Element {\n  const history = useHistory();\n  const activePage =\n    history.location.pathname === PROFILE_ROUTE ? \"profile\" : \"todo\";\n\n  return (\n    <div className={styles.header}>\n      <Link\n        className={`${styles.link} ${\n          activePage === \"todo\" ? styles.active : \"\"\n        }`}\n        to={HOME_ROUTE}\n      >\n        To-Do\n      </Link>\n      <Link\n        className={`${styles.link} ${\n          activePage === \"profile\" ? styles.active : \"\"\n        }`}\n        to={PROFILE_ROUTE}\n      >\n        Profile\n      </Link>\n    </div>\n  );\n}\n\nconst Header = memo(HeaderInner);\n\nexport default Header;\n","import React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport { useAuth } from \"@contexts/index\";\nimport { LOGIN_ROUTE } from \"@constants/routes\";\n\ninterface IPrivateRouteProps {\n  component: () => JSX.Element;\n  path: string;\n}\n\nexport default function PrivateRoute({\n  component: Component,\n  path,\n}: IPrivateRouteProps & RouteProps): JSX.Element {\n  const { currentUser } = useAuth();\n\n  return (\n    <Route\n      path={path}\n      render={(): React.ReactNode => {\n        return currentUser.uid ? <Component /> : <Redirect to={LOGIN_ROUTE} />;\n      }}\n    />\n  );\n}\n","import React, { memo } from \"react\";\nimport { format } from \"date-fns\";\nimport { IDayStatuses } from \"@events/dbEvents\";\nimport styles from \"./_Day.module.scss\";\n\ninterface IDayProps {\n  isSelected: boolean;\n  currentDate: Date;\n  setSelectedDate: (date: Date) => void;\n  dayStatuses: IDayStatuses | undefined;\n}\n\nfunction DayInner({\n  isSelected,\n  currentDate,\n  setSelectedDate,\n  dayStatuses,\n}: IDayProps): JSX.Element {\n  return (\n    <>\n      <button\n        className={styles.calendarDay + (isSelected ? \" active\" : \"\")}\n        type=\"button\"\n        onClick={() => setSelectedDate(currentDate)}\n        disabled={isSelected}\n      >\n        <div className={styles.center}>\n          <p>{format(currentDate, \"eee\")}</p>\n          <p>{format(currentDate, \"dd\")}</p>\n        </div>\n      </button>\n      <div className={styles.markers}>\n        {dayStatuses && dayStatuses.haveUncompleted ? (\n          <span className={styles.uncompleted}> </span>\n        ) : null}\n        {dayStatuses && dayStatuses.haveCompleted ? (\n          <span className={styles.completed}> </span>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nconst Day = memo(DayInner);\n\nexport default Day;\n","import React, { useState, useEffect } from \"react\";\nimport { format, endOfMonth, addDays } from \"date-fns\";\nimport Slider from \"react-slick\";\nimport { IDayStatuses } from \"@events/dbEvents\";\nimport styles from \"./_Calendar.module.scss\";\nimport Day from \"./Day/Day\";\n\ninterface ICalendarProps {\n  selectedDate: Date;\n  setSelectedDate(date: Date): void;\n  daysStatuses: IDayStatuses[];\n}\n\nexport default function Calendar({\n  selectedDate,\n  setSelectedDate,\n  daysStatuses,\n}: ICalendarProps): JSX.Element {\n  const [days, setDays] = useState<JSX.Element[]>();\n  const sliderAdaptive = [\n    {\n      breakpoint: 660,\n      settings: {\n        slidesToShow: 6,\n        slidesToScroll: 6,\n      },\n    },\n    {\n      breakpoint: 400,\n      settings: {\n        slidesToShow: 5,\n        slidesToScroll: 5,\n      },\n    },\n  ];\n\n  useEffect((): void => {\n    const newDate: Date = new Date();\n    const daysLeft: number = endOfMonth(newDate).getDate() - newDate.getDate();\n    const result: JSX.Element[] = [];\n    for (let i = 0; i <= daysLeft; i += 1) {\n      const currentDate: Date = addDays(newDate, i);\n      const isSelected: boolean =\n        format(selectedDate, \"MM/dd/yyyy\") ===\n        format(currentDate, \"MM/dd/yyyy\");\n      const currentStatuses: IDayStatuses | undefined = daysStatuses.find(\n        (elem) =>\n          format(new Date(elem.date), \"MM/dd/yyyy\") ===\n          format(currentDate, \"MM/dd/yyyy\")\n      );\n      result.push(\n        <Day\n          key={i}\n          isSelected={isSelected}\n          currentDate={currentDate}\n          setSelectedDate={setSelectedDate}\n          dayStatuses={currentStatuses}\n        />\n      );\n    }\n    setDays(result);\n  }, [daysStatuses, selectedDate, setSelectedDate]);\n\n  return (\n    <div className={styles.container}>\n      <Slider\n        dots\n        speed={500}\n        slidesToShow={8}\n        slidesToScroll={8}\n        infinite={false}\n        responsive={sliderAdaptive}\n      >\n        {days}\n      </Slider>\n    </div>\n  );\n}\n","import React, { useRef, useState, useContext } from \"react\";\nimport { addToDo, INewToDo } from \"@events/dbEvents\";\nimport { ToDoContext } from \"@contexts/index\";\nimport styles from \"./_CreateTask.module.scss\";\n\ninterface ICreateTaskProps {\n  closeCreator: CallableFunction;\n  selectedDate: Date;\n}\n\nexport default function CreateTask({\n  closeCreator,\n  selectedDate,\n}: ICreateTaskProps): JSX.Element {\n  const titleRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const bodyRef = useRef<HTMLTextAreaElement>({} as HTMLTextAreaElement);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>(\"\");\n  const { addToDoLocal } = useContext(ToDoContext);\n\n  const handleClickOutside = (e: React.MouseEvent): void => {\n    if ((e.target as HTMLDivElement).className === styles.container) {\n      closeCreator();\n    }\n  };\n\n  function handleCreateTask(e: React.FormEvent) {\n    e.preventDefault();\n\n    setLoading(true);\n\n    const newTask: INewToDo = {\n      title: titleRef.current.value,\n      body: bodyRef.current.value,\n      isComplete: false,\n      createdAt: selectedDate.toISOString(),\n    };\n\n    addToDo(newTask)\n      .then((todo) => {\n        setLoading(false);\n        addToDoLocal(todo);\n        closeCreator();\n      })\n      .catch(() => {\n        setLoading(false);\n        setError(\"Error\");\n      });\n  }\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClickOutside}\n      role=\"presentation\"\n    >\n      <div className={styles.main}>\n        <p className={styles.title}>Create Task</p>\n        <button\n          className=\"c-closeCross\"\n          onClick={() => closeCreator()}\n          type=\"button\"\n          aria-label=\"Close\"\n        />\n        {error && (\n          <div className={styles.error}>\n            <p>{error}</p>\n          </div>\n        )}\n        <form className={styles.form} onSubmit={handleCreateTask}>\n          <label className=\"c-input\" htmlFor=\"task-title\">\n            Title:\n            <input\n              ref={titleRef}\n              id=\"task-title\"\n              name=\"task-title\"\n              type=\"text\"\n              required\n            />\n          </label>\n          <label className={`c-input ${styles.body}`} htmlFor=\"task-body\">\n            Details:\n            <textarea ref={bodyRef} id=\"task-body\" name=\"task-body\" />\n          </label>\n          <button disabled={loading} className=\"c-btn-blue\" type=\"submit\">\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/trash.c49a10b9.svg\";","import React, { useState, useRef, useContext } from \"react\";\nimport { format } from \"date-fns\";\nimport trashIcon from \"@assets/icons/trash.svg\";\nimport { removeToDo, editToDo, IToDo } from \"@events/dbEvents\";\nimport { ToDoContext } from \"@contexts/index\";\nimport styles from \"./_EditTask.module.scss\";\n\ninterface ITaskProps {\n  closeTask: CallableFunction;\n  task: IToDo;\n}\n\nexport default function Task({ closeTask, task }: ITaskProps): JSX.Element {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>(\"\");\n  const [taskChanged, setTaskChanged] = useState<boolean>(false);\n\n  const titleRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const bodyRef = useRef<HTMLTextAreaElement>({} as HTMLTextAreaElement);\n\n  const { editToDoLocal, removeToDoLocal } = useContext(ToDoContext);\n\n  const handleClickOutside = (e: React.MouseEvent): void => {\n    if ((e.target as HTMLDivElement).className === styles.container) {\n      closeTask();\n    }\n  };\n\n  const handleTaskEdit = (): void => {\n    if (\n      taskChanged &&\n      titleRef.current.value === task.title &&\n      bodyRef.current.value === task.body\n    ) {\n      setTaskChanged(false);\n    } else if (!taskChanged) {\n      setTaskChanged(true);\n    }\n  };\n\n  const handleSaveChanges = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    setLoading(true);\n\n    const newToDo: IToDo = {\n      todoId: task.todoId,\n      title: titleRef.current.value,\n      body: bodyRef.current.value,\n      isComplete: task.isComplete,\n      createdAt: task.createdAt,\n    };\n\n    editToDo(newToDo as IToDo, task.createdAt)\n      .then(() => {\n        closeTask();\n        editToDoLocal(newToDo);\n      })\n      .catch(() => setLoading(false));\n  };\n\n  const removeTask = (): void => {\n    setError(\"\");\n    setLoading(true);\n\n    removeToDo(task.createdAt, task.todoId)\n      .then(() => {\n        closeTask();\n        removeToDoLocal(task.todoId);\n      })\n      .catch(() => {\n        setError(\"Error\");\n        setLoading(false);\n      });\n  };\n\n  const closeWindow = (): void => closeTask();\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClickOutside}\n      role=\"presentation\"\n    >\n      <form className={styles.main} onSubmit={handleSaveChanges}>\n        {error && error}\n        <button\n          className=\"c-closeCross\"\n          onClick={closeWindow}\n          type=\"button\"\n          aria-label=\"Close\"\n        />\n        <p className={styles.date}>\n          {format(new Date(task.createdAt), \"MM/dd/yyyy\")}\n        </p>\n        <input\n          className={styles.title}\n          ref={titleRef}\n          defaultValue={task.title}\n          onChange={handleTaskEdit}\n        />\n        <textarea\n          className={styles.body}\n          ref={bodyRef}\n          defaultValue={task.body}\n          onChange={handleTaskEdit}\n        />\n        <div className={styles.bottom}>\n          <button\n            className={`${styles.saveBtn} c-btn-blue`}\n            type=\"submit\"\n            disabled={!taskChanged || loading}\n          >\n            Save\n          </button>\n          <button\n            className={styles.trashBtn}\n            disabled={loading}\n            type=\"button\"\n            onClick={removeTask}\n          >\n            <img src={trashIcon} alt=\"trash\" />\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { IToDo, changeToDoStatus } from \"@events/dbEvents\";\nimport styles from \"./_Task.module.scss\";\n\ninterface ITaskProps {\n  task: IToDo;\n  setSelectedTask: React.Dispatch<React.SetStateAction<IToDo | null>>;\n  checkDayStatuses: (todoId: string, todoIsComplete: boolean) => void;\n}\n\nexport default function Task({\n  task,\n  setSelectedTask,\n  checkDayStatuses,\n}: ITaskProps): JSX.Element {\n  function handlerChangeToDoStatus(\n    e: React.ChangeEvent<HTMLInputElement>,\n    todo: IToDo\n  ) {\n    e.target.readOnly = true;\n    changeToDoStatus(todo.createdAt, todo.todoId, !todo.isComplete).then(() => {\n      checkDayStatuses(todo.todoId, !todo.isComplete);\n      e.target.readOnly = false;\n    });\n  }\n\n  return (\n    <div\n      className={styles.task}\n      key={task.todoId}\n      onClick={() => setSelectedTask(task)}\n      role=\"presentation\"\n    >\n      <div className={styles.taskCheckbox}>\n        <input\n          type=\"checkbox\"\n          defaultChecked={task.isComplete}\n          onChange={(e) => handlerChangeToDoStatus(e, task)}\n          onClick={(e) => e.stopPropagation()}\n        />\n        <span> </span>\n      </div>\n      <p>{task.title}</p>\n    </div>\n  );\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { format } from \"date-fns\";\nimport {\n  getToDosData,\n  IToDo,\n  changeDayStatuses,\n  IDayStatuses,\n  getDaysStatuses,\n} from \"@events/dbEvents\";\nimport { Header } from \"@components/index\";\nimport { ToDoContext } from \"@contexts/index\";\nimport Calendar from \"./Calendar/Calendar\";\nimport CreateTask from \"./CreateTask/CreateTask\";\nimport EditTask from \"./EditTask/EditTask\";\nimport Task from \"./Task/Task\";\nimport styles from \"./_ToDo.module.scss\";\n\nexport default function ToDo(): JSX.Element {\n  const [toDos, setToDos] = useState<IToDo[]>([]);\n  const [creation, setCreation] = useState<boolean>(false);\n  const [selectedTask, setSelectedTask] = useState<IToDo | null>(null);\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n  const [daysStatuses, setDaysStatuses] = useState<IDayStatuses[]>(\n    [] as IDayStatuses[]\n  );\n\n  const checkDayStatuses = useCallback(\n    (\n      todoId: string,\n      todoIsComplete: boolean,\n      currentToDos: IToDo[] = toDos\n    ) => {\n      const todayStatusesIndex = daysStatuses.findIndex(\n        (elem) =>\n          format(new Date(elem.date), \"MM/dd/yyyy\") ===\n          format(selectedDate, \"MM/dd/yyyy\")\n      );\n      const todayStatuses = daysStatuses[todayStatusesIndex];\n      if (todayStatuses) {\n        const newToDos: IToDo[] = [...currentToDos];\n        let haveCompleted = false;\n        let haveUncompleted = false;\n        const todoIndex: number = newToDos.findIndex(\n          (elem) => elem.todoId === todoId\n        );\n        newToDos[todoIndex].isComplete = todoIsComplete;\n        newToDos.forEach((elem) => {\n          if (elem.isComplete) {\n            haveCompleted = true;\n          } else {\n            haveUncompleted = true;\n          }\n        });\n        if (\n          todayStatuses.haveCompleted !== haveCompleted ||\n          todayStatuses.haveUncompleted !== haveUncompleted\n        ) {\n          const newDayStatuses: IDayStatuses = {\n            haveCompleted,\n            haveUncompleted,\n            date: todayStatuses.date,\n          };\n          changeDayStatuses(newDayStatuses);\n          const newDaysStatuses: IDayStatuses[] = [...daysStatuses];\n          newDaysStatuses[todayStatusesIndex] = newDayStatuses;\n          setDaysStatuses(newDaysStatuses);\n        }\n      } else {\n        const newDayStatuses: IDayStatuses = {\n          haveCompleted: false,\n          haveUncompleted: true,\n          date: selectedDate,\n        };\n        changeDayStatuses(newDayStatuses);\n        const newDaysStatuses: IDayStatuses[] = [\n          ...daysStatuses,\n          newDayStatuses,\n        ];\n        setDaysStatuses(newDaysStatuses);\n      }\n    },\n    [daysStatuses, selectedDate, toDos]\n  );\n\n  const addToDoLocal = useCallback(\n    (newToDo: IToDo): void => {\n      const newToDos: IToDo[] = [newToDo, ...toDos];\n      setToDos(newToDos);\n      checkDayStatuses(newToDo.todoId, newToDo.isComplete, newToDos);\n    },\n    [checkDayStatuses, toDos]\n  );\n\n  const editToDoLocal = (task: IToDo): void => {\n    const newToDos: IToDo[] = [...toDos];\n    const editedToDoIndex: number = newToDos.findIndex(\n      (elem) => elem.todoId === task.todoId\n    );\n    newToDos[editedToDoIndex] = task;\n    setToDos(newToDos);\n  };\n\n  const removeToDoLocal = (taskId: string): void => {\n    const newToDos: IToDo[] = [...toDos];\n    const removedTaskIndex: number = newToDos.findIndex(\n      (elem) => elem.todoId === taskId\n    );\n    newToDos.splice(removedTaskIndex, 1);\n    setToDos(newToDos);\n    const todayStatusesIndex: number = daysStatuses.findIndex(\n      (elem) =>\n        format(new Date(elem.date), \"MM/dd/yyyy\") ===\n        format(selectedDate, \"MM/dd/yyyy\")\n    );\n    const todayStatuses: IDayStatuses = daysStatuses[todayStatusesIndex];\n    let haveCompleted = false;\n    let haveUncompleted = false;\n    newToDos.forEach((elem) => {\n      if (elem.isComplete) {\n        haveCompleted = true;\n      } else {\n        haveUncompleted = true;\n      }\n    });\n    if (\n      todayStatuses.haveCompleted !== haveCompleted ||\n      todayStatuses.haveUncompleted !== haveUncompleted\n    ) {\n      const newDayStatuses: IDayStatuses = {\n        haveCompleted,\n        haveUncompleted,\n        date: todayStatuses.date,\n      };\n      changeDayStatuses(newDayStatuses);\n      const newDaysStatuses: IDayStatuses[] = [...daysStatuses];\n      newDaysStatuses[todayStatusesIndex] = newDayStatuses;\n      setDaysStatuses(newDaysStatuses);\n    }\n  };\n\n  const openCreator = (): void => setCreation(true);\n  const closeCreator = (): void => setCreation(false);\n  const closeTask = (): void => setSelectedTask(null);\n\n  useEffect(() => {\n    getDaysStatuses().then((data) => {\n      setDaysStatuses(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    getToDosData(selectedDate).then((data) => {\n      const ToDos: IToDo[] = [];\n      data.forEach((doc) => {\n        ToDos.push({\n          todoId: doc.id,\n          title: doc.data().title,\n          body: doc.data().body,\n          isComplete: doc.data().isComplete,\n          createdAt: doc.data().createdAt,\n        });\n      });\n      setToDos(ToDos);\n    });\n  }, [selectedDate]);\n\n  return (\n    <ToDoContext.Provider\n      value={{ addToDoLocal, editToDoLocal, removeToDoLocal }}\n    >\n      <div className={styles.container}>\n        <Header />\n        <Calendar\n          selectedDate={selectedDate}\n          setSelectedDate={setSelectedDate}\n          daysStatuses={daysStatuses}\n        />\n        <div className={styles.tasks}>\n          <p className={styles.tasksTitle}>Tasks</p>\n          <div className={styles.tasksList}>\n            {toDos.map((item) => {\n              return (\n                <Task\n                  key={item.todoId}\n                  task={item}\n                  setSelectedTask={setSelectedTask}\n                  checkDayStatuses={checkDayStatuses}\n                />\n              );\n            })}\n          </div>\n          <button\n            className={`${styles.createTaskBtn} c-btn-orange`}\n            type=\"button\"\n            onClick={openCreator}\n          >\n            Create task\n          </button>\n        </div>\n        {creation && (\n          <CreateTask closeCreator={closeCreator} selectedDate={selectedDate} />\n        )}\n        {selectedTask && <EditTask closeTask={closeTask} task={selectedTask} />}\n      </div>\n    </ToDoContext.Provider>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useAuth } from \"@contexts/index\";\nimport { Header } from \"@components/index\";\nimport { UPDATE_PROFILE_ROUTE, LOGIN_ROUTE } from \"@constants/routes\";\nimport styles from \"./_Profile.module.scss\";\n\ninterface IProfileProps {\n  switchTheme: CallableFunction;\n}\n\nexport default function Profile({ switchTheme }: IProfileProps): JSX.Element {\n  const [error, setError] = useState<string>();\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n\n  async function handleLogout(): Promise<void> {\n    try {\n      await logout();\n      history.push(LOGIN_ROUTE);\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Header />\n      {error && error}\n      <div className={styles.main}>\n        Profile: {currentUser.email}\n        <button\n          className={styles.themeSwitcher}\n          onClick={() => switchTheme()}\n          type=\"button\"\n        >\n          Switch theme\n        </button>\n        <Link className={styles.update} to={UPDATE_PROFILE_ROUTE}>\n          Update Profile\n        </Link>\n        <button\n          className={styles.logoutBtn}\n          type=\"button\"\n          onClick={handleLogout}\n        >\n          Log Out\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"@contexts/index\";\nimport { LOGIN_ROUTE, REGISTER_ROUTE } from \"@constants/routes\";\nimport styles from \"./_ResetPassword.module.scss\";\n\nexport default function ResetPassword(): JSX.Element {\n  const emailRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const { resetPassword } = useAuth();\n  const [error, setError] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n\n  async function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    try {\n      setMessage(\"\");\n      setError(\"\");\n      setLoading(true);\n      await resetPassword(emailRef.current.value);\n      setMessage(\"Check your inbox for further instructions\");\n    } catch {\n      setError(\"Failed to reset password\");\n    }\n    setLoading(false);\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n        <h2 className={styles.cardTitle}>Reset Password</h2>\n        {error}\n        {message}\n        <form className={styles.cardForm} onSubmit={handleSubmit}>\n          <label className=\"c-input\" htmlFor=\"email\">\n            <p>Email:</p>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              ref={emailRef}\n              required\n            />\n          </label>\n          <button disabled={loading} className=\"c-btn-blue\" type=\"submit\">\n            Send\n          </button>\n          <Link to={LOGIN_ROUTE}>Log In</Link>\n        </form>\n      </div>\n      <div className={styles.bottom}>\n        Need an account?\n        <Link className={styles.loginLink} to={REGISTER_ROUTE}>\n          Sign Up\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"@contexts/index\";\nimport { PROFILE_ROUTE } from \"@constants/routes\";\nimport styles from \"./_UpdateProfile.module.scss\";\n\nexport default function UpdateProfile(): JSX.Element {\n  const emailRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const passwordRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const passwordConfirmRef = useRef<HTMLInputElement>({} as HTMLInputElement);\n  const { currentUser, updateEmail, updatePassword } = useAuth();\n  const [error, setError] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const history = useHistory();\n\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    const email: string = emailRef.current.value;\n    const password: string = passwordRef.current.value;\n    const passwordConfirm: string = passwordConfirmRef.current.value;\n\n    if (password === passwordConfirm) {\n      setLoading(true);\n      setError(\"\");\n\n      const promises = [];\n      if (email !== currentUser.email) {\n        promises.push(updateEmail(email));\n      }\n      if (password) {\n        promises.push(updatePassword(password));\n      }\n\n      Promise.all(promises)\n        .then(() => {\n          history.push(PROFILE_ROUTE);\n        })\n        .catch(() => {\n          setError(\"Failed to update profile\");\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      setError(\"Password do not match\");\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n        <h2 className={styles.cardTitle}>Update Profile</h2>\n        {error}\n        <form className={styles.cardForm} onSubmit={handleSubmit}>\n          <label className={styles.cardFormItem} htmlFor=\"email\">\n            <p>Email:</p>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              ref={emailRef}\n              required\n              defaultValue={currentUser.email ? currentUser.email : \"\"}\n            />\n          </label>\n          <label className={styles.cardFormItem} htmlFor=\"password\">\n            <p>Password:</p>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              ref={passwordRef}\n              placeholder=\"Leave blank to keep the same\"\n            />\n          </label>\n          <label className={styles.cardFormItem} htmlFor=\"confirm-password\">\n            <p>Confirm Password:</p>\n            <input\n              id=\"confirm-password\"\n              name=\"confirm-password\"\n              type=\"password\"\n              ref={passwordConfirmRef}\n              placeholder=\"Leave blank to keep the same\"\n            />\n          </label>\n          <button disabled={loading} className={styles.submitBtn} type=\"submit\">\n            Update\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AuthProvider } from \"@contexts/index\";\nimport {\n  Signup,\n  Login,\n  ToDo,\n  Profile,\n  ResetPassword,\n  UpdateProfile,\n} from \"@pages/index\";\nimport { PrivateRoute } from \"@components/index\";\nimport {\n  HOME_ROUTE,\n  PROFILE_ROUTE,\n  UPDATE_PROFILE_ROUTE,\n  LOGIN_ROUTE,\n  REGISTER_ROUTE,\n  RESET_PASSWORD_ROUTE,\n} from \"@constants/routes\";\nimport styles from \"./_App.module.scss\";\n\nexport default function App(): JSX.Element {\n  const [theme, setTheme] = useState<string>(\n    localStorage.theme ? localStorage.theme : \"dark\"\n  );\n\n  const switchTheme = (): void => {\n    const newTheme: string = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n    localStorage.theme = newTheme;\n  };\n\n  return (\n    <div className={`${styles.app} ${theme}`}>\n      <div className={styles.main}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path={HOME_ROUTE} component={ToDo} />\n              <PrivateRoute\n                path={PROFILE_ROUTE}\n                component={() => <Profile switchTheme={switchTheme} />}\n              />\n              <PrivateRoute\n                path={UPDATE_PROFILE_ROUTE}\n                component={UpdateProfile}\n              />\n              <Route path={LOGIN_ROUTE} component={Login} />\n              <Route path={REGISTER_ROUTE} component={Signup} />\n              <Route path={RESET_PASSWORD_ROUTE} component={ResetPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"@assets/styles/common.scss\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}